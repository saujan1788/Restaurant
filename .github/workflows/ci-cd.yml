name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Data Cleaning
        run: |
          python Python_project/DataCleaning.py

      - name: Run Model Training
        run: |
          python Python_project/AITraining.py

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Debug Docker Hub Username
        run: echo "Docker Hub Username: ${{ secrets.DOCKER_HUB_USERNAME }}"

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/restaurant:latest

      - name: Install SSH
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client

      - name: SSH to Bastion Host and Update Kubernetes
        env:
          BASTION_HOST: ${{ secrets.BASTION_HOST }}
          BASTION_USER: ${{ secrets.BASTION_USER }}
          BASTION_KEY: ${{ secrets.BASTION_KEY }}
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        run: |
          echo "${BASTION_KEY}" | base64 --decode > bastion_key
          chmod 600 bastion_key
          ssh -i bastion_key -o StrictHostKeyChecking=no ${BASTION_USER}@${BASTION_HOST} << EOF
            echo "${KUBE_CONFIG_DATA}" | base64 --decode > ~/.kube/config
            kubectl set image deployment/restaurant-deployment restaurant=${DOCKER_HUB_USERNAME}/restaurant:latest
          EOF
